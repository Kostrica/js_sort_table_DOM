{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","sortRows","colNum","colName","choice","rows","cells","innerHTML","rowsArray","slice","parseSalary","cell","split","join","rowA","rowB","isNaN","localeCompare","sort","append","addEventListener","e","target","closest","cellIndex"],"mappings":";AAAA,aAyCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvCD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAQrC,SAASE,EAASC,GACVC,IAEFC,EAFED,EAAUN,EAAMQ,KAAK,GAAGC,MAAMJ,GAAQK,UACtCC,EAAY,EAAIR,EAAMK,MAAMI,MAAM,GAGhCN,OAAAA,GACD,IAAA,SACGO,IAAAA,EAAc,SAAAC,GAClB,OAACA,EACEF,MAAM,GACNG,MAAM,KACNC,KAAK,KAEVT,EAAS,SAACU,EAAMC,GACdL,OAAAA,EAAYI,EAAKR,MAAMJ,GAAQK,WAC3BG,EAAYK,EAAKT,MAAMJ,GAAQK,YACrC,MACF,QACEH,EAAS,SAACU,EAAMC,GACdC,OAAAA,MAAMF,EAAKR,MAAMJ,GAAQK,WACpBO,EAAKR,MAAMJ,GAAQK,UACnBU,cAAcF,EAAKT,MAAMJ,GAAQK,YACjCO,EAAKR,MAAMJ,GAAQK,WACjBQ,EAAKT,MAAMJ,GAAQK,WAIhCC,EAAUU,KAAKd,GAEfJ,EAAMmB,OAANnB,MAAAA,EAAgBQ,EAAAA,IAnClBX,EAAMuB,iBAAiB,QAAS,SAAAC,GAG9BpB,EAFgBoB,EAAEC,OAAOC,QAAQ,MAEhBC","file":"main.61dddb87.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst thead = document.querySelector('thead');\r\nconst tbody = document.querySelector('tbody');\r\n\r\nthead.addEventListener('click', e => {\r\n  const onClick = e.target.closest('th');\r\n\r\n  sortRows(onClick.cellIndex);\r\n});\r\n\r\nfunction sortRows(colNum) {\r\n  const colName = thead.rows[0].cells[colNum].innerHTML;\r\n  const rowsArray = [...tbody.rows].slice(0);\r\n  let choice;\r\n\r\n  switch (colName) {\r\n    case 'Salary':\r\n      const parseSalary = cell =>\r\n        +cell\r\n          .slice(1)\r\n          .split(',')\r\n          .join('');\r\n\r\n      choice = (rowA, rowB) =>\r\n        parseSalary(rowA.cells[colNum].innerHTML)\r\n          - parseSalary(rowB.cells[colNum].innerHTML);\r\n      break;\r\n    default:\r\n      choice = (rowA, rowB) =>\r\n        isNaN(rowA.cells[colNum].innerHTML)\r\n          ? (rowA.cells[colNum].innerHTML)\r\n            .localeCompare(rowB.cells[colNum].innerHTML)\r\n          : +rowA.cells[colNum].innerHTML\r\n            - +rowB.cells[colNum].innerHTML;\r\n      break;\r\n  }\r\n\r\n  rowsArray.sort(choice);\r\n\r\n  tbody.append(...rowsArray);\r\n}\r\n"]}